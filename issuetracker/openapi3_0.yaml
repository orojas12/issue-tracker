openapi: 3.0.3
info:
  title: Issue Tracker - OpenAPI 3.0.3
  description: |-
    Issue Tracker OpenAPI 3.0 specification.

    Some useful links:
    - [Github repository](https://github.com/orojas12/issue-tracker)
    - [OpenAPI 3.0 definition file](https://github.com/orojas12/issue-tracker/blob/master/backend/openapi.yaml)

  license:
    name: MIT License
    url: https://github.com/orojas12/issue-tracker/blob/main/LICENSE
  version: 0.0.1

tags:
  - name: auth
  - name: teams

paths:
  /teams:
    get:
      tags:
        - teams
      summary: Get list of all teams
      responses:
        200:
          description: Returns list of all teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
                example:
                  - id: GGAI7
                    name: QA Team
                    team_members:
                      - username: oscar
                        team_id: GGAI7
                      - username: alex
                        team_id: GGAI7
                  - id: SHWP4
                    name: Design Team
                    team_members:
                      - username: oscar
                        team_id: GGAI7
                      - username: alex
                        team_id: GGAI7
    post:
      tags:
        - teams
      summary: Create a new team
      requestBody:
        description: New team object
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
            example:
              name: Development Team
      responses:
        200:
          description: Returns newly created team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
              example:
                id: GGAI7
                name: QA Team
                team_members:
                  -
  /teams/{team_id}:
    get:
      tags:
        - teams
      summary: Get details about a particular team
      parameters: 
        - in: path
          name: team_id
          required: true
          description: Team id
          schema:
            type: string
          example: GGAI7
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
              example:
                id: GGAI7
                name: QA Team
                date_created: 2024-05-04T00:09:26Z
                team_members:
                  - username: oscar
                    team_id: GGAI7
                  - username: sarah
                    team_id: GGAI7
                  - username: john
                    team_id: GGAI7
                  - username: eric
                    team_id: GGAI7
        404:
          description: Team not found
    put:
      tags:
        - teams
      summary: Edit team details
      parameters:
        - in: path
          name: team_id
          required: true
          description: Team id
          schema:
            type: string
          example: GGAI7
      requestBody:
        description: Only the team name can be modified
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: Quality Assurance
      responses:
        200:
          description: Returns updated team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
              example:
                id: GGAI7
                name: Quality Assurance
                team_members:
                  - username: oscar
                    team_id: GGAI7
                  - username: sarah
                    team_id: GGAI7
                  - username: john
                    team_id: GGAI7
    delete:
      tags:
        - teams
      summary: Delete a team
      parameters:
        - in: path
          name: team_id
          required: true
          description: Team id
          schema:
            type: string
          example: GGAI7
      responses:
        204:
          description: Deleted team successfully
        404:
          description: Team not found


  /teams/{team_id}/members:
    post:
      tags:
        - teams
      summary: Add a user to this team
      parameters:
        - in: path
          name: team_id
          required: true
          description: Team id
          schema:
            type: string
          example: GGAI7
        - in: query
          name: username
          required: true
          description: Username of the user to be added
          schema:
            type: string
          example: kate
      responses:
        200:
          description: Returns the new team member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
              example:
                username: kate
                team_id: GGAI7
    delete:
      tags:
        - teams
      summary: Remove a user from this team
      parameters:
        - in: path
          name: team_id
          required: true
          description: Team id
          schema:
            type: string
          example: GGAI7
        - in: query
          name: username
          required: true
          description: Username of the user to be removed
          schema:
            type: string
          example: kate
      responses:
        204:
          description: Removed team member successfully
        404:
          description: Team member not found

  /auth/login:
    post:
      tags:
        - auth
      summary: Log in
      requestBody:
        required: true
        description: Username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Logged in successfully
        '401':
          description: Invalid credentials
        '500':
          description: Authentication error

components:
  schemas:
    Team:
      type: object
      properties:
        id:
          type: string
          description: Team id
        name:
          type: string
          description: Team name
        date_created:
          type: string
          description: Team creation date in ISO 8601 format
        team_members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
    TeamMember:
      type: object
      properties:
        username:
          type: string
          description: Username
        team_id:
          type: string
          description: Team id
    Login:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID